% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Interactive.R
\name{Assignment}
\alias{Assignment}
\alias{addStations}
\alias{removeStations}
\alias{modifyAssignment}
\alias{assignment_addStations}
\alias{assignment_removeStations}
\title{Add or remove biotic stations from assignments}
\usage{
addStations(acousticPSU, acousticLayer, Station, projectPath, modelName,
  processID)

removeStations(acousticPSU, acousticLayer, Station, projectPath, modelName,
  processID)

modifyAssignment(acousticPSU, acousticLayer, Station, projectPath,
  modelName, processID, action = c("add", "remove"))

assignment_addStations(acousticPSU, acousticLayer, Station, Assignment)

assignment_removeStations(acousticPSU, acousticLayer, Station, Assignment)
}
\arguments{
\item{acousticPSU}{The acoustic primary sampling unit (PSU) for which to remove the station.}

\item{acousticLayer}{The acoustic Layer for which to remove the station.}

\item{Station}{The biotic station to remove (can be a vector of stations).}

\item{projectPath}{The path to the StoX project, i.e., the folder of the project with the sub folders "input", "output" and "process". Can possibly be the path to a file inside the project folder.}

\item{modelName}{The name of the model (one of "Baseline", "Analysis" and "Report").}

\item{processID}{The ID of the process.}
}
\description{
The functions \code{addStations} and \code{removeStations} adds or removes biotic stations from the Assignment process data of the specified process.
}
\details{
The assignment IDs are refreshed for every change, after sorting the assignemnts by the PSU column.
}
\examples{
# Create artificial assignment data:
Assignment <- data.table::data.table(
    PSUName = paste0("T", c(1,1, 2, 3,3)), 
    Layer = "L1", 
    Station = c(1,2, 2, 1,2), 
    AssignmentID = c(1,1, 2, 1,1)
)

# Add a station:
Assignment1 <- assignment_addStations("T3", "L1", 4, Assignment)
all.equal(Assignment, Assignment2)

# Remove the same station:
Assignment2 <- assignment_removeStations("T3", "L1", 4, Assignment1)
all.equal(Assignment, Assignment2)

}
