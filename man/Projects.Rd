% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Framework.R
\name{Projects}
\alias{Projects}
\alias{createProject}
\alias{openProject}
\alias{openProjectAsTemplate}
\alias{closeProject}
\alias{saveProject}
\alias{saveAsProject}
\alias{copyProject}
\alias{deleteProject}
\title{Create, open, close, save, saveAs, copy and delete a StoX project.}
\usage{
createProject(
  projectPath,
  template = "EmptyTemplate",
  ow = FALSE,
  showWarnings = FALSE,
  open = TRUE,
  Application = R.version.string
)

openProject(
  projectPath,
  showWarnings = FALSE,
  force = FALSE,
  reset = FALSE,
  saveIfAlreadyOpen = FALSE,
  verbose = FALSE
)

openProjectAsTemplate(projectPath, newProjectPath, ow = FALSE)

closeProject(
  projectPath,
  save = NULL,
  force.save = FALSE,
  Application = R.version.string,
  msg = TRUE
)

saveProject(
  projectPath,
  force = FALSE,
  Application = R.version.string,
  msg = TRUE
)

saveAsProject(
  projectPath,
  newProjectPath,
  ow = FALSE,
  Application = R.version.string
)

copyProject(
  projectPath,
  newProjectPath,
  ow = FALSE,
  empty.output = FALSE,
  empty.input = FALSE,
  close = FALSE,
  msg = TRUE
)

deleteProject(projectPath)
}
\arguments{
\item{projectPath}{The path to the StoX project, i.e., the folder of the project with the sub folders "input", "output" and "process". Can possibly be the path to a file inside the project folder.}

\item{template}{A string naming the template to use when generating the project. See \code{getAvaiableTemplates} for a list of available templates.}

\item{ow}{Logical: If TRUE overwrite the project.}

\item{showWarnings}{Logical: If TRUE display warninigs when creting the project folders.}

\item{open}{Logical: If TRUE open the project after creating it.}

\item{Application}{A single string naming the application used when saving the project. Defaulted to R.version.string.}

\item{force}{Logical: If TRUE reopen (close and then open) the project if already open.}

\item{reset}{Logical: If TRUE reset each model to the start of the model.}

\item{saveIfAlreadyOpen}{Logical: If TRUE save the project before closing if already open and force is TRUE.}

\item{verbose}{Logical: If TRUE, print information to the console, e.g. about backward compatibility.}

\item{newProjectPath}{The path to the copied StoX project.}

\item{save}{Logical: If TRUE save the project before closing. Default (NULL) is to ask the user whether to save the project before closing.}

\item{force.save}{If no changes are made to the project, force save anyway. Overrides the \code{save} option.}

\item{msg}{Logical: If FALSE no messages are printed to console (except possibly for extremely important ones).}

\item{empty.output}{Logical: If TRUE, do not include the output files when copying.}

\item{empty.input}{Logical: If TRUE, do not include the input files when copying.}

\item{close}{Logical: (In \code{copyProject}) If TRUE, close the project after copying.}
}
\description{
Create a StoX project using \code{createProject}; open an existing (un-opened) project using \code{openProject}, which involves creating files holding the memory of the project; close a project using  \code{closeProject}, which removes the memory files; save the project using \code{saveProject}, which saves the memory files to the project description file; make a copy using \code{copyProject} or \code{saveAsProject}, where the former closes the given project unsaved and opens the copy, or delete a project using \code{deleteProject}.
}
