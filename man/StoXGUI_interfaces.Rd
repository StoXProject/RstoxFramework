% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Routes.R
\name{StoXGUI_interfaces}
\alias{StoXGUI_interfaces}
\alias{getModelInfo}
\alias{getInteractiveMode}
\alias{getInteractiveData}
\alias{getMapData}
\alias{getEDSUColours}
\alias{getStationColours}
\alias{getProcessPropertySheet}
\alias{setProcessPropertyValue}
\alias{getFunctionHelpAsHtml}
\alias{getObjectHelpAsHtml}
\alias{getFilterOptionsAll}
\alias{getParameterTableInfo}
\alias{getParameterVectorInfo}
\title{Get objects for use in the GUI}
\usage{
getModelInfo()

getInteractiveMode(projectPath, modelName, processID)

getInteractiveData(projectPath, modelName, processID)

getMapData(projectPath, modelName, processID)

getEDSUColours(n = 5, as.rgb = FALSE, col = c("pink", "red4", "darkorange2"))

getStationColours(
  n = 5,
  as.rgb = FALSE,
  col = c("steelblue2", "darkblue", "mediumvioletred")
)

getProcessPropertySheet(projectPath, modelName, processID)

setProcessPropertyValue(
  groupName,
  name,
  value,
  projectPath,
  modelName,
  processID
)

getFunctionHelpAsHtml(projectPath, modelName, processID, stylesheet = "")

getObjectHelpAsHtml(packageName, objectName, stylesheet = "")

getFilterOptionsAll(
  projectPath,
  modelName,
  processID,
  include.numeric = TRUE,
  stopIfEmptyPossibleValues = FALSE
)

getParameterTableInfo(
  projectPath,
  modelName,
  processID,
  format,
  stopIfEmptyPossibleValues = FALSE
)

getParameterVectorInfo(
  projectPath,
  modelName,
  processID,
  format,
  stopIfEmptyPossibleValues = FALSE
)
}
\arguments{
\item{projectPath}{The path to the StoX project, i.e., the folder of the project with the sub folders "input", "output" and "process". Can possibly be the path to a file inside the project folder.}

\item{modelName}{The name of the model (possible values are "baseline", "analysis" and "report").}

\item{processID}{The ID of the process.}

\item{n}{The number of colour steps.}

\item{as.rgb}{Logical: If TRUE return RGB table instead of HEX.}

\item{col}{A vector of colour steps.}

\item{groupName}{The name of the property group, one of "processArguments", "functionInputs" and "functionParameters".}

\item{name}{The name of the property, such as "processName", "functionName", one of the process parameters ("enabled", "showInMap" and "fileOutput"), the name of a funciton input, or the name of a function parameter.}

\item{value}{The value to set to the property (string).}

\item{stylesheet}{The html stylesheet to use, defaulted to no stylesheet.}

\item{packageName}{The package holding the object to get
help as html for.}

\item{objectName}{The R object to get help as html for.}

\item{include.numeric}{Logical: If TRUE get possible values for numeric ariables as well as categorical variables.}

\item{stopIfEmptyPossibleValues}{Logical: If TRUE get possible values for numeric ariables as well as categorical variables.}

\item{format}{A character string naming the format to get info for.}
}
\description{
\code{getModelNames} and \code{getModelInfo} return the names and description of the StoX models. \cr \cr
\code{getCanShowInMap}: can the data produces by a process using this function be shown in the map? \cr \cr
\code{getInteractiveData} and \code{getInteractiveMode} get the interactive data and the mode of interactive data (data that canbe set and get iva the GUI) . \cr \cr
\code{getMapData} gets the data to plot in the map of the GUI. \cr \cr
\code{getProcessPropertySheet} gets the properties of a process. \cr \cr
\code{setProcessPropertyValue} gets the properties of a process. \cr \cr
\code{getFunctionHelpAsHtml} and \code{getObjectHelpAsHtml} get the R documentation of a StoX function or object as html for display in the GUI. \cr \cr
\code{getFilterOptionsAll} gets possible tables, operators and unique values for use in the filter expression builder. \cr \cr
\code{getParameterTableInfo} and \code{getParameterVectorInfo} get information of a parameter table or vector. \cr \cr
}
