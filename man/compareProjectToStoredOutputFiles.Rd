% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Utilities.R
\name{compareProjectToStoredOutputFiles}
\alias{compareProjectToStoredOutputFiles}
\title{Function for comparing existing output files with the memory read using runProject()}
\usage{
compareProjectToStoredOutputFiles(
  projectPath,
  projectPath_original = projectPath,
  emptyStringAsNA = FALSE,
  intersect.names = TRUE,
  ignore = NULL,
  skipNAFraction = FALSE,
  skipNAAt = FALSE,
  NAReplacement = NULL,
  ignoreEqual = FALSE,
  classOf = c("first", "second"),
  try = TRUE,
  data.out = FALSE,
  mergeWhenDifferentNumberOfRows = FALSE,
  sort = TRUE,
  compareReports = FALSE,
  tolerance = sqrt(.Machine$double.eps),
  ...
)
}
\arguments{
\item{projectPath}{The project to be run and tested against the existing output files of the project gievn by \code{projectPath_original}.}

\item{projectPath_original}{The project holding the existing output files, defaulted to \code{projectPath}.}

\item{emptyStringAsNA}{Logical: If TRUE, read empty strings as NA from the stored original tables, as RstoxFramework has started writing NAs as NAs and not as empty strings.}

\item{intersect.names}{Logical: If TRUE, compare only same named columns.}

\item{ignore}{A vector of names of columns to ignore in all.equal().}

\item{skipNAFraction}{Logical: If TRUE, skip rows with more than 50 percent NAs. Can be set to a value between 0 and 1.}

\item{skipNAAt}{A vector of strings naming the columns in which NA values identifies rows to skip.}

\item{NAReplacement}{List of replacement values for different classes of NA, applied after any merging as to incorporate NAs generated during merging.}

\item{ignoreEqual}{Logical: If TRUE, ignore columns where all values are equal.}

\item{classOf}{Character string specifying whether to compare after converting to the class of the first or second table. Set this to "first" (default) to convert class to the original data.}

\item{try}{Logical: If FALSE do not run the process in a \code{tryCatch}. Set this to FALSE when debugging, as the \code{tryCatch} masks the errors in the \code{traceback}.}

\item{data.out}{Logical, if TRUE output the original and new data along with the tests.}

\item{mergeWhenDifferentNumberOfRows}{Logical, if TRUE use all.equal_mergeIfDifferentNumberOfRows instead of all.equal.}

\item{sort}{Logical, if TRUE sort the tables before all.equal. When  mergeWhenDifferentNumberOfRows = TRUE the tables are always sorted.}

\item{compareReports}{Logical, if TRUE compare the report specifically (old method kept for robustness).}

\item{tolerance}{The tolerance to use in all.equal.}

\item{...}{Used in runModel().}
}
\description{
Function for comparing existing output files with the memory read using runProject()
}
