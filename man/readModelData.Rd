% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/API.R
\name{readModelData}
\alias{readModelData}
\title{Read the output files of a project}
\usage{
readModelData(
  projectPath,
  modelName = NULL,
  processName = NULL,
  verifyFiles = FALSE,
  unlist = FALSE,
  emptyStringAsNA = FALSE,
  readCsvAsLines = FALSE,
  ...
)
}
\arguments{
\item{projectPath}{The path to the StoX project, i.e., the folder of the project with the sub folders "input", "output" and "process". Can possibly be the path to a file inside the project folder.}

\item{modelName}{The name of the model (possible values are "baseline", "analysis" and "report").}

\item{processName}{The name of the process.}

\item{verifyFiles}{Logical: If TRUE verify that the files are from processes that exist in the project.}

\item{unlist}{Whether to unlist elements of length 1. If \code{unlist} is FALSE or 0, the output will be a list of models named by the model names (one or more of "baseline", "analysis" and "report"), which in turn are lists of processes named by the process names, which in turn are lists of process output elements, e.g. a list of data.tables such as "Data" and "Resolution" for processes using the MeanNASC function. If \code{unlist} = 1 the models will be unlisted so that the output is a list of processes. If \code{unlist} = 2 and a single process is requested, the process will be unlisted so that the output is a list of process output elements. If \code{unlist} = 3 and a single process with a single process output element is requested that element is returned. The default (TRUE) is interpreted as 3.}

\item{emptyStringAsNA}{Logical: If TRUE, read empty strings as NA from the stored original tables, as RstoxFramework has started writing NAs as NAs and not as empty strings.}

\item{readCsvAsLines}{Logical: If TRUE read csv files as lines with \code{\link[base]{readLines}}.}

\item{...}{Arguments passed to \code{\link{readBootstrapData}}, e.g. \code{selection}, which must be set to NA to read the entire file.}
}
\value{
A list of model output.
}
\description{
This function reads all or some of the output files of a project, indicated by model and process names.
}
